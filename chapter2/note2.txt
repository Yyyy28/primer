1.基本内置类型
    1.算术类型：字符、整型数、布尔值、浮点数
    2.空类型void
    3.类型转换
        表达式中既有带符号类型又有无符号类型,会自动转换为无符号类型
    4.字面值常量
2.变量
    1.extern关键字:声明变量
    2.标识符
    3.作用域
        1.局部变量会覆盖全局变量
3.复合类型
    1.引用
        1.引用对象必须初始化
        2.引用的对象不可以变更,只能指向该对象
    2.指针
        1.指针的值
            1.指向一个对象
            2.指向紧邻对象所占空间的下一个位置
            3.空指针
            4.无效指针
        2.取地址符：&
        3.解引用符：*
        4.void * ：可以存放任意类型对象的地址
        5.复合类型
4.const限定符
    1.编译器会在编译时将代码中所有用到该变量的地方都替换成对应的值
    2.const对象被设定为仅当在文件内有效
    3.const对象必须初始化
    4.const的引用
        1.引用的对象不可以变更,加上const修饰,引用的对象的内容无法通过引用变更
        2.顶层const         int i=0;
                            int *const p1=&i;
                表示任意的对象是常量
        3.底层const
            const int * p2=&i;
            与引用和指针等复合类型的基本类型有关
        4.constexpr变量
            C++11,由编译器来验证变量的值是否是一个常量表达式
            1.声明为constexpr的变量一定是一个常量
5.处理类型
    1.typedef定义类型别名
        typedef double wages;//wages是double的同义词
        typedef wages base,*p;//base是double的同义词,p是double *的同义词
    2.using别名声明
        using SI=Sales_item;//SI是Sales_item的同义词
    3.auto类型说明符
    4.decltype类型指示符
        选择并返回操作数的数据类型
        1.()和不加()的区别
            对于不加()的表达式得到的结果是该变量的类型
            加了()的表达式,从而推断得到引用类型
6.自定义数据结构
    1.struct
    2.头文件
        1.预处理器
            1.#define   把一个名字设定为预处理变量
            2.#ifdef    当前仅当变量已定义时为真
            3.#ifndef   当且仅当变量未定义时为真
            4.#endif    一旦检查2,3结果为真,则执行后续操作直到遇到#endif指令为止
            